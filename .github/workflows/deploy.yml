# .github/workflows/deploy.yml
name: Deploy Website

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"

      - name: Install Dependencies
        run: npm install

      - name: Configure AWS Credentials (for getting API URL)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Get API Gateway URL
        id: get-api-url
        run: |
          API_URL=$(aws cloudformation describe-stacks --stack-name easton-boosters-stack --query 'Stacks[0].Outputs[?OutputKey==`ApiGatewayInvokeURL`].OutputValue' --output text)
          echo "api_url=$API_URL" >> $GITHUB_OUTPUT

      - name: Build
        env:
          VITE_API_GATEWAY_URL: ${{ steps.get-api-url.outputs.api_url }}
        run: npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          publish_branch: www
          force_orphan: true
          keep_files: false

      - name: Deploy AWS Resources
        run: |
          cd aws
          zip -r contact-form.zip lambda/contact-form
          aws s3 cp contact-form.zip s3://eastonboosters-website/
          aws cloudformation deploy --template-file template.yaml --stack-name easton-boosters-stack --capabilities CAPABILITY_IAM

          # Force new API Gateway deployment
          API_ID=$(aws cloudformation describe-stacks --stack-name easton-boosters-stack --query 'Stacks[0].Outputs[?OutputKey==`ApiGatewayInvokeURL`].OutputValue' --output text | cut -d'/' -f3 | cut -d'.' -f1)
          aws apigateway create-deployment --rest-api-id $API_ID --stage-name prod --description "Manual deployment for CORS"
